# inherit from the openSUSE support plug-in
. ./opensuse

# include the configuration file
. $CONF_DIR/distro/mageia

# mageia_get_architecture_aliases()
# purpose: translates an architecture name to the distribution's nicknames
# input  : an architecture name
# output : the distribution's names for the architecture, ordered by accuracy
mageia_get_architecture_aliases() {
	opensuse_get_architecture_aliases "$1"
}

# mageia_download_package_list()
# purpose: downloads the distribution's package list
# input  : the package list URL and the destination path
# output : -
mageia_download_package_list() {
	# download the package list
	download_file "$1" "$2"
	[ 0 -ne $? ] && return 1

	# decompress the package list
	decompress_file "$2"
}

# mageia_convert_package_list()
# purpose: converts a repository's package list to roar-ng's common format
# input  : the package list path and the repository name
# output : a package list in roar-ng's format
mageia_convert_package_list() {
	awk -v distro="$distro_name" \
	    -v distro_version="$distro_version" \
	    -v repo="$2" \
	    -F @ '
	    {
	    	if ("provides" == $2) {
	    		alternate_names_count = split($0, alternate_names, "@");
	    	} else {
	    		if ("requires" == $2) {
	    			count = split($0, dependencies_split, "@");
	    			for (i = 3; count >= i; ++i) {
	    				sub(/\[.*/, "", dependencies_split[i]);
	    				dependencies = (dependencies","dependencies_split[i])
	    			}

	    			# remove the leading comma
	    			sub(/^,/, "", dependencies);
	    		} else {
	    			if ("summary" == $2) {
	    				description = $3
	    			} else {
	    				if ("filesize" == $2) {
	    					size = $3
	    				} else {
	    					if ("info" == $2) {
	    						# the file name is this field, with the extension
	    						file_name = ($3".rpm");

	    						# split the string by "-"
	    						count = split($3, elements, "-");

	    						# the revision and the architecture are stuffed in
	    						# the last element
	    						revision_and_architecture = elements[count];

	    						# the version always comes before the revision
	    						version = elements[count - 1];

	    						# the name is the rest
	    						name = elements[1];

	    						# strip the architecture and actual revision
	    						count = split(revision_and_architecture,
	    									  elements,
	    									  ".");
	    						revision = elements[1];
	    						architecture = elements[count];


	    						# create the list of names: alternate names are
	    						# placed after the package name
	    						names = name;
	    						for (i = 3; alternate_names_count >= i; ++i) {
	    							sub(/\[.*/, "", alternate_names[i]);
	    							if (name != alternate_names[i]) {
	    								names = (names","alternate_names[i])
	    							}
	    						}

	    						# print the entry
	    						printf("%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n",
	    							   names,
	    							   version,
	    							   revision,
	    							   architecture,
	    							   file_name,
	    							   description,
	    							   distro,
	    							   distro_version,
	    							   repo,
	    							   dependencies,
	    							   size);

	    						dependencies = ""
	    					}
	    				}
	    			}
	    		}
	    	}
	    }' "$1"
}

# mageia_extract_package()
# purpose: extracts a package of the distribution into a directory
# input  : a package path and the destination directory
# output : -
mageia_extract_package() {
	opensuse_extract_package "$1" "$2"
}